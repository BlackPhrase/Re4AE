pipe::client::client(char const *,char const *)
pipe::client::client(char const *)
urandom::complex::complex(void)
frustum_2d::frustum_2d(void)
vfs::ireader::ireader(class vfs::ireader const &)
vfs::ireader::ireader(void const *,int,int)
vfs::ireader::ireader(void)
vfs::iwriter::iwriter(class vfs::iwriter const &)
vfs::iwriter::iwriter(void)
pipe::message::message(enum pipe::message::message_type const &,char const *)
pipe::message::message(enum pipe::message::message_type const &,void const *,unsigned int const &)
threading::mutex::mutex(void)
threading::scoped_lock::scoped_lock(class threading::mutex &)
pipe::server::server(char const *)
smem_container::smem_container(class smem_container const &)
smem_container::smem_container(void)
str_container::str_container(class str_container const &)
str_container::str_container(void)
timing::timer::timer(void)
u_core::u_core(class u_core const &)
u_core::u_core(void)
u_memory::u_memory(void)
pipe::wrapper::wrapper(char const *,void * const &)
pipe::wrapper::wrapper(char const *,enum pipe::wrapper::construction_type const &)
pipe::client::~client(void)
urandom::complex::~complex(void)
vfs::ireader::~ireader(void)
vfs::iwriter::~iwriter(void)
pipe::message::~message(void)
threading::mutex::~mutex(void)
threading::scoped_lock::~scoped_lock(void)
pipe::server::~server(void)
smem_container::~smem_container(void)
str_container::~str_container(void)
u_core::~u_core(void)
pipe::wrapper::~wrapper(void)
class urandom::complex & urandom::complex::operator=(class urandom::complex const &)
class frustum_2d & frustum_2d::operator=(class frustum_2d const &)
class vfs::ireader & vfs::ireader::operator=(class vfs::ireader const &)
class vfs::iwriter & vfs::iwriter::operator=(class vfs::iwriter const &)
class threading::mutex & threading::mutex::operator=(class threading::mutex const &)
class threading::scoped_lock & threading::scoped_lock::operator=(class threading::scoped_lock const &)
class smem_container & smem_container::operator=(class smem_container const &)
struct smem_value & smem_value::operator=(struct smem_value const &)
class str_container & str_container::operator=(class str_container const &)
struct str_value & str_value::operator=(struct str_value const &)
struct str_container::str_value_cmp & str_container::str_value_cmp::operator=(struct str_container::str_value_cmp const &)
class timing::timer & timing::timer::operator=(class timing::timer const &)
class u_core & u_core::operator=(class u_core const &)
class u_memory & u_memory::operator=(class u_memory const &)
class u_platform & u_platform::operator=(class u_platform const &)
struct u_token & u_token::operator=(struct u_token const &)
class ufrustum & ufrustum::operator=(class ufrustum const &)
bool str_container::str_value_cmp::operator()(struct str_value const *,struct str_value const *)
const pipe::client::`vftable'
const vfs::ireader::`vftable'
const vfs::iwriter::`vftable'
const pipe::server::`vftable'
void Loki::Private::AtExitFn(void)
void ufrustum::_add(struct _vec3<float> &,struct _vec3<float> &,struct _vec3<float> &)
void ufrustum::_add(struct ufrustum::fplane &)
void ufrustum::_add(class _plane<float> &)
void ufrustum::_clear(void)
void u_core::_destroy(void)
void u_memory::_destroy(void)
void debug::_initialize(void)
void u_core::_initialize(char const *)
void u_memory::_initialize(void)
void pipe::server::add_client(char const *)
void pipe::server::add_client(class gtl::intrusive_ptr<class pipe::message,struct gtl::intrusive_base,class gtl::intrusive_default_functionality>)
void vfs::ireader::advance(int)
unsigned int vfs::ireader::advance_term_string(void)
bool b_debug
void debug::backend(char const *,char const *,char const *,int)
unsigned int compression::compress::block(void *,unsigned int,void const *,unsigned int)
unsigned int compression::decompress::block(void *,unsigned int,void const *,unsigned int)
unsigned int compression::compress::block_maxsize(unsigned int)
class pipe::wrapper * pipe::wrapper::can_connect(char const *)
void vfs::iwriter::chunk_close(void)
unsigned int vfs::ireader::chunk_find(unsigned int)
class gtl::intrusive_ptr<class vfs::ireader,struct gtl::intrusive_base,class gtl::intrusive_default_functionality> vfs::ireader::chunk_open(unsigned int)
void vfs::iwriter::chunk_open(unsigned int)
class gtl::intrusive_ptr<class vfs::ireader,struct gtl::intrusive_base,class gtl::intrusive_default_functionality> vfs::ireader::chunk_open_iterator(unsigned int &,class gtl::intrusive_ptr<class vfs::ireader,struct gtl::intrusive_base,class gtl::intrusive_default_functionality>)
bool vfs::ireader::chunk_read(unsigned int,void *,unsigned int)
unsigned int vfs::iwriter::chunk_size(void)
void vfs::iwriter::chunk_write(unsigned int,void *,unsigned int)
void smem_container::clean(void)
void str_container::clean(void)
class pipe::client & pipe::server::client(char const *)
class u_map<char *,class pipe::client *,struct pipe::server::pred_str> const & pipe::server::clients(void)
class u_svector<struct vert_2d,48> * frustum_2d::clip_poly(class u_svector<struct vert_2d,48> &,class u_svector<struct vert_2d,48> &)
class u_svector<struct _vec3<float>,48> * ufrustum::clip_poly(class u_svector<struct _vec3<float>,48> &,class u_svector<struct _vec3<float>,48> &)
void pipe::client::connect(char const *)
void * pipe::wrapper::connect(char const *)
bool pipe::client::connected(void)
class u_core core
unsigned int compression::crc32(void const *,unsigned int)
void * pipe::wrapper::create(char const *)
void frustum_2d::create_from_aabb(class _aabb2<float> const &)
bool ufrustum::create_from_clip_poly(struct _vec3<float> *,int,struct _vec3<float> &,class ufrustum &)
void ufrustum::create_from_matrix(struct _matrix<float> &,unsigned int)
void ufrustum::create_from_planes(struct ufrustum::fplane *,int)
void ufrustum::create_from_points(struct _vec3<float> *,int,struct _vec3<float> &)
void ufrustum::create_from_portal(class u_svector<struct _vec3<float>,48> *,struct _vec3<float> &,struct _matrix<float> &)
void pipe::server::create_listener(char const *)
void ufrustum::create_occluder(struct _vec3<float> *,int,struct _vec3<float> &,class ufrustum &)
void const * pipe::message::data(void)
void pipe::client::disconnect(bool)
struct smem_value * smem_container::dock(unsigned int,unsigned int,void *)
struct str_value * str_container::dock(char const *)
void smem_container::dump(void)
void str_container::dump(void)
int vfs::ireader::elapsed(void)
unsigned int Loki::Private::elements
bool vfs::ireader::eof(void)
class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > debug::error2string(long)
void debug::error(long,char const *,char const *,char const *,int)
void debug::exception(char const *,char const *,char const *,char const *,char const *,int)
void debug::exception(char const *,char const *,char const *,char const *,int)
void debug::exception(char const *,char const *,char const *,int)
bool vfs::exist(char const *)
void * ucore::extern_realloc(void const *,unsigned int)
void debug::fail(char const *,char const *,char const *,char const *,char const *,int)
void debug::fail(char const *,char const *,char const *,char const *,int)
void debug::fail(char const *,char const *,char const *,int)
void debug::fatal(char const *,...)
int vfs::file_list(class u_set<struct vfs::file,struct std::less<struct vfs::file> > &,char const *,char const *,bool,bool,bool,bool)
void u_platform::fpu_set24r(void)
void u_platform::fpu_set64r(void)
class smem_container * g_shared_memory_container
class str_container * g_string_container
class urandom::simple urandom::gen
class urandom::complex urandom::gen_mt
unsigned __int64 u_platform::get_QPC(void)
unsigned __int64 u_platform::get_clocks(void)
unsigned int timing::timer::get_elapsed_ms(void)
float timing::timer::get_elapsed_sec(void)
unsigned __int64 timing::timer::get_elapsed_ticks(void)
unsigned int ufrustum::get_mask(void)
void pipe::wrapper::handle(void * const &)
void * const & pipe::wrapper::handle(void)
unsigned int urandom::complex::i(void)
char const * pipe::wrapper::id(void)
void u_platform::initialize_begin(void)
void u_platform::initialize_end(void)
void smem_container::integrity(void)
void str_container::integrity(void)
int vfs::ireader::length(void)
class pipe::client & pipe::server::listener(void)
void threading::mutex::lock(void)
void log(char const *,char const *)
void log(char const *)
void log(char const *,struct _matrix<float> const &)
void log(char const *,struct _vec3<float> const &)
void log(char const *,int)
void log(char const *,unsigned int)
void log(char const *,float)
bool log_exec_cb
class u_vector<class str_shared> log_file
void log_flush(void)
void log_set_callback(void (*)(char const *))
struct _matrix<double> m4d_identity
struct _matrix<float> m4f_identity
struct _matrix<class half> m4h_identity
unsigned int urandom::complex::max(void)
void * u_memory::mem_alloc(unsigned int)
void u_memory::mem_compact(void)
void u_memory::mem_free(void *)
void * u_memory::mem_realloc(void *,unsigned int)
unsigned int u_memory::mem_usage(unsigned int *,unsigned int *)
class u_memory memory
void msg(char const *,...)
void threading::name(char const *)
char * pipe::wrapper::name(char const *)
unsigned short compression::compress::normal(struct _vec3<float> const &)
struct _vec3<float> compression::decompress::normal(unsigned short)
void pipe::client::on_connect(char const *)
void pipe::client::on_disconnect(void)
void pipe::client::on_receive_message(class gtl::intrusive_ptr<class pipe::message,struct gtl::intrusive_base,class gtl::intrusive_default_functionality>,class pipe::client *)
void pipe::server::on_receive_message(class gtl::intrusive_ptr<class pipe::message,struct gtl::intrusive_base,class gtl::intrusive_default_functionality>,class pipe::client *)
class Loki::Private::LifetimeTracker * * Loki::Private::pTrackerArray
class gtl::intrusive_ptr<class pipe::message,struct gtl::intrusive_base,class gtl::intrusive_default_functionality> pipe::wrapper::parse_message(void const *,unsigned int const &)
bool vfs::pattern_match(char const *,char const *)
class u_platform platform
void const * vfs::ireader::pointer(void)
void vfs::ireader::r(void *,int)
float vfs::ireader::r_angle16(void)
float vfs::ireader::r_angle8(void)
void vfs::ireader::r_dir(struct _vec3<float> &)
float vfs::ireader::r_fp32(void)
float vfs::ireader::r_fp32_q16(float,float)
float vfs::ireader::r_fp32_q8(float,float)
short vfs::ireader::r_s16(void)
int vfs::ireader::r_s32(void)
__int64 vfs::ireader::r_s64(void)
signed char vfs::ireader::r_s8(void)
void vfs::ireader::r_string(class std::basic_string<char,struct std::char_traits<char>,class allocator_t<char> > &)
void vfs::ireader::r_string(char *,unsigned int)
void vfs::ireader::r_stringz(class std::basic_string<char,struct std::char_traits<char>,class allocator_t<char> > &)
void vfs::ireader::r_stringz(class str_shared &)
void vfs::ireader::r_stringz(char *,unsigned int)
unsigned short vfs::ireader::r_u16(void)
unsigned int vfs::ireader::r_u32(void)
unsigned __int64 vfs::ireader::r_u64(void)
unsigned char vfs::ireader::r_u8(void)
void vfs::ireader::r_vec2f(struct _vec2<float> &)
void vfs::ireader::r_vec2i(struct _vec2<int> &)
void vfs::ireader::r_vec3f(struct _vec3<float> &)
void vfs::ireader::r_vec3i(struct _vec3<int> &)
void vfs::ireader::r_vec4f(struct _vec4<float> &)
void vfs::ireader::r_vec4i(struct _vec4<int> &)
class gtl::intrusive_ptr<class pipe::message,struct gtl::intrusive_base,class gtl::intrusive_default_functionality> pipe::client::receive_message(void)
class gtl::intrusive_ptr<class pipe::message,struct gtl::intrusive_base,class gtl::intrusive_default_functionality> pipe::wrapper::receive_message(void)
class pipe::wrapper & pipe::client::receiver(void)
void vfs::ireader::rewind(void)
class gtl::intrusive_ptr<class vfs::ireader,struct gtl::intrusive_base,class gtl::intrusive_default_functionality> vfs::ropen(char const *)
void urandom::complex::seed(unsigned int)
void vfs::ireader::seek(int)
void pipe::client::send_message(class gtl::intrusive_ptr<class pipe::message,struct gtl::intrusive_base,class gtl::intrusive_default_functionality>)
void pipe::wrapper::send_message(class gtl::intrusive_ptr<class pipe::message,struct gtl::intrusive_base,class gtl::intrusive_default_functionality>)
class pipe::wrapper & pipe::client::sender(void)
void ufrustum::simplify_poly_aabb(class u_svector<struct _vec3<float>,48> *,struct ufrustum::fplane &)
unsigned int const & pipe::message::size(void)
void vfs::ireader::skip_stringz(void)
void threading::spawn(void (*)(void *),char const *,unsigned int,void *)
void timing::timer::start(void)
unsigned int smem_container::stat_economy(void)
unsigned int str_container::stat_economy(void)
char * sz_change_symbol(char *,char,char)
char * sz_copy_first(char const *,char *,int,char)
char const * sz_copy_first(char const *,class std::basic_string<char,struct std::char_traits<char>,class allocator_t<char> > &,char)
char * sz_dup(char const *)
char * sz_item(char const *,int,char *,int,char,char const *,bool)
char const * sz_item(char const *,int,class std::basic_string<char,struct std::char_traits<char>,class allocator_t<char> > &,char,char const *,bool)
int sz_item_count(char const *,char)
char const * sz_item_pos(char const *,unsigned int,char)
char * sz_items(char const *,int,int,char *,int,char)
class std::basic_string<char,struct std::char_traits<char>,class allocator_t<char> > sz_list_to_stream(class u_vector<class std::basic_string<char,struct std::char_traits<char>,class allocator_t<char> > > const &,char)
unsigned int sz_parse_item(char const *,int,struct u_token *)
unsigned int sz_parse_item(char const *,struct u_token *)
char * sz_replace_item(char const *,int,char const *,char *,int,char)
char * sz_replace_items(char const *,int,int,char const *,char *,int,char)
class std::basic_string<char,struct std::char_traits<char>,class allocator_t<char> > & sz_sprintf(class std::basic_string<char,struct std::char_traits<char>,class allocator_t<char> > &,char const *,...)
void sz_stream_to_list(class u_vector<class std::basic_string<char,struct std::char_traits<char>,class allocator_t<char> > > &,char const *,char)
char * sz_timestamp(char *,unsigned int)
class std::basic_string<char,struct std::char_traits<char>,class allocator_t<char> > & sz_trim(class std::basic_string<char,struct std::char_traits<char>,class allocator_t<char> > &)
char * sz_trim(char *)
class std::basic_string<char,struct std::char_traits<char>,class allocator_t<char> > & sz_trim_left(class std::basic_string<char,struct std::char_traits<char>,class allocator_t<char> > &)
char * sz_trim_left(char *)
class std::basic_string<char,struct std::char_traits<char>,class allocator_t<char> > & sz_trim_right(class std::basic_string<char,struct std::char_traits<char>,class allocator_t<char> > &)
char * sz_trim_right(char *)
int vfs::ireader::tell(void)
enum ufrustum::cullresult ufrustum::test_aabb(float const *,unsigned int &)
bool ufrustum::test_poly_inside(class u_svector<struct _vec3<float>,48> &)
bool ufrustum::test_poly_inside(struct _vec3<float> *,int)
bool ufrustum::test_poly_inside_dirty(struct _vec3<float> *,int)
enum ufrustum::cullresult ufrustum::test_saabb(struct _vec3<float> &,float,float const *,unsigned int &)
enum ufrustum::cullresult ufrustum::test_sphere(struct _vec3<float> &,float,unsigned int &)
bool ufrustum::test_sphere_dirty(struct _vec3<float> &,float)
void pipe::client::try_connect(char const *)
void * pipe::wrapper::try_connect(char const *)
bool threading::mutex::trylock(void)
enum pipe::message::message_type const & pipe::message::type(void)
void threading::mutex::unlock(void)
void pipe::client::update(void)
void pipe::server::update(void)
void vfs::iwriter::w_angle16(float)
void vfs::iwriter::w_angle8(float)
void vfs::iwriter::w_chunk_close8(unsigned int)
void vfs::iwriter::w_chunk_open8(unsigned int &)
void vfs::iwriter::w_dir(struct _vec3<float> const &)
void vfs::iwriter::w_fp32(float)
void vfs::iwriter::w_fp32_q16(float,float,float)
void vfs::iwriter::w_fp32_q8(float,float,float)
void vfs::iwriter::w_printf(char const *,...)
void vfs::iwriter::w_racc(unsigned int,void const *,unsigned int)
void vfs::iwriter::w_s16(short)
void vfs::iwriter::w_s32(int)
void vfs::iwriter::w_s64(__int64)
void vfs::iwriter::w_s8(signed char)
void vfs::iwriter::w_sdir(struct _vec3<float> const &)
void vfs::iwriter::w_string(char const *)
void vfs::iwriter::w_stringz(class std::basic_string<char,struct std::char_traits<char>,class allocator_t<char> > const &)
void vfs::iwriter::w_stringz(class str_shared const &)
void vfs::iwriter::w_stringz(char const *)
void vfs::iwriter::w_u16(unsigned short)
void vfs::iwriter::w_u32(unsigned int)
void vfs::iwriter::w_u64(unsigned __int64)
void vfs::iwriter::w_u8(unsigned char)
void vfs::iwriter::w_vec2f(struct _vec2<float> const &)
void vfs::iwriter::w_vec2i(struct _vec2<int> const &)
void vfs::iwriter::w_vec3f(struct _vec3<float> const &)
void vfs::iwriter::w_vec3i(struct _vec3<int> const &)
void vfs::iwriter::w_vec4f(struct _vec4<float> const &)
void vfs::iwriter::w_vec4i(struct _vec4<int> const &)
class gtl::intrusive_ptr<class vfs::iwriter,struct gtl::intrusive_base,class gtl::intrusive_default_functionality> vfs::wopen(char const *)
void threading::yield(unsigned int)
